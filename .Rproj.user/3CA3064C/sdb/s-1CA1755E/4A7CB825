{
    "contents" : "library(paradox)\nlibrary(manipulate)\n\nmanipulate({\nd <- expand.grid(\n  alpha = alpha,\n  beta = beta,\n  sigma = seq(0, 0.3, 0.05),\n  num_pop = seq(1, 12, 2),\n  m = m,\n  q = q,\n  cpar = cpar,\n  p = p,\n  n = n)\n\nrepititions <- 30\n\n\nparadox_sim_out <- plyr::adply(d, 1, function(x) {\n  junk <- plyr::rdply(repititions, function(y) {\n    temp <- with(x, paradox_pe_sim(t_end = 1000, alpha = rep(alpha,\n          num_pop), beta = beta, m = m, q = q, n = n, num_pop =\n        num_pop, cpar = cpar, p = p, sigma = sigma))\n    data.frame(pe = temp$pe)\n})\n  data.frame(pe = mean(junk$pe))\n})\n\ncol <- RColorBrewer::brewer.pal(9, \"YlOrRd\")\ncol <- smooth_pal(col, 5)\nz <- as.matrix(reshape2::dcast(paradox_sim_out, num_pop ~ sigma, value.var = \"pe\")[,-1])\nfilled.contour(seq(1, 12, length.out = nrow(z)), seq(0, 0.3,\n     length.out = ncol(z)), z, col = col, ylab = \"Sigma\", xlab = \"N\",\n   levels = seq(1, max(z), length.out = length(col)),\n   main = \"Portfolio Effect\", lwd = 0.1)}\n, m = slider(0.01, 0.2, 0.1), \n  q = slider(0.001, 0.2, 0.01), \n  cpar = slider(0.5, 4, 2), \n  n = slider(0.4, 1.5, 1), \n  p = slider(0.5, 1.5, 1), \n  alpha = slider(0.1, 1.5, 0.5), \n  beta = slider(1/500, 1/10, 1/150))",
    "created" : 1384902519753.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3178523135",
    "id" : "4A7CB825",
    "lastKnownWriteTime" : 1384902588,
    "path" : "~/Dropbox/PostDoc/2013_ParadoxPortfolios/Manipulate/paradox/demo/test-param-manipulate.r",
    "project_path" : "demo/test-param-manipulate.r",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}